{"version":3,"sources":["components/InputField.js","components/Person.js","components/Notification.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","props","onChange","handleChange","Person","person","handleClick","name","number","onClick","Notification","message","styles","style","baseUrl","axios","get","then","res","data","newPerson","post","delete","id","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterPersons","setFilterPersons","filteredPersons","setFilteredPersons","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","noteService","initialPersons","handleUpdate","oldPerson","map","catch","error","handleDelete","filter","el","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","event","target","value","toLowerCase","includes","onSubmit","preventDefault","some","window","confirm","find","alert","concat","response","setTimeout","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91fc1e91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst InputField = (props) => (\r\n    <input onChange={props.handleChange}/>\r\n)\r\n\r\nexport default InputField","import React from 'react'\r\n\r\nconst Person = ({person, handleClick}) => (\r\n    <div>\r\n        <p>{person.name} {person.number}</p>\r\n        <button onClick={() => handleClick(person)}>delete</button>\r\n    </div>\r\n)\r\n\r\nexport default Person","const Notification = ({ message, styles }) => {\r\n    if(message === null) return null\r\n    return (\r\n        <div style={styles}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = person => {\r\n    const request = axios.delete(`${baseUrl}/${person.id}`)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\r\nimport InputField from './components/InputField'\r\nimport Person from './components/Person'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterPersons, setFilterPersons ] = useState(false)\r\n  const [ filteredPersons, setFilteredPersons ] = useState([])\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  const successfulNotifStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n  }\r\n\r\n  const errorNotifStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px'\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(persons.some(person => person.name === newName)) {\r\n      if(window.confirm(`${newName} is already added, update phone number?`)) {\r\n        handleUpdate(persons.find(el => el.name === newName), newNumber)\r\n      }\r\n    } else {\r\n        if(persons.some(el => el.number === newNumber)) {\r\n          alert(`${newNumber} is already added to phonebook`)\r\n        } else {\r\n          noteService.create({ name: newName, number: newNumber })\r\n            .then(res => {\r\n              setPersons(persons.concat(res))\r\n              setNotificationMessage(`${newName} was added to the database`)\r\n            })\r\n            .catch(error => setErrorMessage(`${error.response.data.error}`))\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        }\r\n      }\r\n  }\r\n  \r\n  const handleUpdate = (oldPerson, number) => {\r\n    const newPerson = {...oldPerson, number: number}\r\n    noteService.update(oldPerson.id, newPerson).then(res => setPersons(persons.map(person => person.id === oldPerson.id ? res : person))).catch(error => setErrorMessage('This person information was already removed'))\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleDelete = person => {\r\n    noteService.deletePerson(person).then(res => {\r\n      setPersons(persons.filter(el => el.id !== person.id))\r\n    }).catch(error => setErrorMessage('This person information was already removed'))\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    if(event.target.value !== '') {\r\n      setFilterPersons(true)\r\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase())))\r\n    } else {\r\n      setFilterPersons(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={notificationMessage} styles={successfulNotifStyle}/>\r\n      <Notification message={errorMessage} styles={errorNotifStyle} />\r\n      <h2>Phonebook</h2>\r\n      <div>\r\n        filter shown with <InputField handleChange={handleFilter}/>\r\n      </div>\r\n      <h2>Add new</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <InputField handleChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <InputField handleChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      { /*<div>debug: {newName}</div> */}\r\n      <h2>Numbers</h2>\r\n      {filterPersons === false\r\n        ? persons.map(person => <Person key={person.name} person={person} handleClick={handleDelete}/>)\r\n        : filteredPersons.map(person => <Person key={person.name} person={person} handleClick={handleDelete}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}